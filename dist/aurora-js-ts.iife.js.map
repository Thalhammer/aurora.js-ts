{"version":3,"file":"aurora-js-ts.iife.js","sources":["../src/core/base.ts","../src/core/buffer.ts","../src/core/buffer-list.ts","../src/core/underflow-error.ts","../src/core/event-host.ts","../src/core/bitstream.ts","../src/core/stream.ts","../src/seek-point.ts","../src/demuxer.ts","../src/demuxers/wave.ts","../src/demuxers/au.ts","../src/demuxers/aiff.ts","../src/demuxers/index.ts","../src/decoder.ts","../src/decoders/lpcm.ts","../src/decoders/xlaw.ts","../src/audio-device-backend.ts","../src/audio-device.ts","../src/devices/resampler.ts","../src/devices/webaudio.ts","../src/filter.ts","../src/filters/balance.ts","../src/filters/volume.ts","../src/sources/buffer.ts","../src/sources/file.ts","../src/sources/http.ts","../src/queue.ts","../src/asset.ts","../src/player.ts"],"sourcesContent":["/**\n * Base class used for all classes\n *\n * @export\n * @class Base\n */\nexport class Base {\n\n};","declare var BlobBuilder;\n\nexport class Buffer {\n    public data: Uint8Array;\n    public next: Buffer;\n    public prev: Buffer;\n\n    get length() { return this.data.length; }\n    constructor(input: any)\n    {\n        if(input instanceof Uint8Array){\n            this.data = input;\n        } else if(input instanceof ArrayBuffer || Array.isArray(input) || (typeof global !== 'undefined' && global.Buffer && global.Buffer.isBuffer(input))) {\n            this.data = new Uint8Array(input as ArrayBuffer);\n        } else if(typeof input === \"number\") { // This is split from above to make typescript happy\n            this.data = new Uint8Array(input as number);\n        } else if(input.buffer instanceof ArrayBuffer) {\n            this.data = new Uint8Array(input.buffer, input.byteOffset, input.length * input.BYTES_PER_ELEMENT);\n        } else if(input instanceof Buffer) {\n            this.data = input.data;\n        } else throw new Error(\"Constructing buffer with unknown type.\");\n        this.next = null;\n        this.prev = null;\n    }\n\n    toBlob(): Blob {\n        return Buffer.makeBlob(this.data.buffer);\n    }\n\n    toBlobURL(): string {\n        return Buffer.makeBlobURL(this.data.buffer);\n    }\n\n    copy() {\n        return new Buffer(new Uint8Array(this.data));\n    }\n\n    slice(position: number, length?: number) {\n        if(!length) length = this.length;\n        if(position==0 && length >= this.length) return new Buffer(this.data);\n        else return new Buffer(this.data.subarray(position, position + length));\n    }\n\n    static allocate(size: number) {\n        return new Buffer(size);\n    }\n\n    static makeBlob(data: any, type? : string): Blob {\n        if(!type) type = \"application/octet-stream\";\n        \n        if(Blob) return new Blob([data], { type: type });\n        \n        if(BlobBuilder) {\n            let b = new BlobBuilder();\n            b.append(data);\n            return b.getBlob(type);\n        }\n        return null;\n    }\n\n    static makeBlobURL(data: any, type?: string) : string {\n        if(!URL) return null;\n        return URL.createObjectURL(this.makeBlob(data, type));\n    }\n\n    static revokeBlobURL(url: string) {\n        if(!URL) return;\n        URL.revokeObjectURL(url);\n    }\n};","import { Buffer } from \"./buffer\";\n\nexport class BufferList {\n    public first: Buffer;\n    public last: Buffer;\n    public numBuffers: number;\n    public availableBytes: number;\n    public availableBuffers: number;\n\n    constructor() {\n        this.first = null;\n        this.last = null;\n        this.numBuffers = 0;\n        this.availableBytes = 0;\n        this.availableBuffers = 0;\n    }\n\n    copy():BufferList {\n        let result = new BufferList();\n        result.first = this.first;\n        result.last = this.last;\n        result.numBuffers = this.numBuffers;\n        result.availableBytes = this.availableBytes;\n        result.availableBuffers = this.availableBuffers;\n        return result;\n    }\n\n    append(buffer: Buffer) {\n        buffer.prev = this.last;\n        if(this.last) this.last.next = buffer;\n        this.last = buffer;\n        if(!this.first) this.first = buffer;\n\n        this.availableBytes += buffer.length;\n        this.availableBuffers++;\n        this.numBuffers++;\n    }\n\n    advance(): boolean {\n        if(this.first) {\n            this.availableBytes -= this.first.length;\n            this.availableBuffers--;\n            this.first = this.first.next;\n            return !(!this.first);\n        }\n        return false;\n    }\n\n    rewind(): boolean {\n        if(this.first && !this.first.prev) return false;\n\n        this.first = this.first ? this.first.prev : this.last;\n        if(this.first) {\n            this.availableBuffers++;\n            this.availableBytes += this.first.length;\n        }\n        return !(!this.first);\n    }\n\n    reset() {\n        while(this.rewind());\n    }\n};","export class UnderflowError extends Error {\n    constructor(m?:string) {\n        super(m || \"UnderflowError\");\n        Object.setPrototypeOf(this, UnderflowError.prototype);\n        this.name = \"UnderflowError\";\n    }\n};","import {Base} from './base'\n\n\nexport interface IEventHost {\n    on(event: string, fn);\n    off(event?: string, fn?);\n    once(event: string, fn);\n    emit(event, ...args: any[]);\n};\n\nexport class EventHost extends Base implements IEventHost {\n    private events: {[index: string] : any[]};\n    on(event: string, fn) {\n        if(!this.events) this.events = {};\n        if(!this.events[event]) this.events[event] = [];\n        this.events[event].push(fn);\n    }\n\n    off(event?: string, fn?) {\n        if(!this.events) return;\n        if(!this.events[event]) return;\n        if(!fn) {\n            if(!event) this.events = {};\n            else this.events[event] = [];\n            return;\n        }\n        let idx = this.events[event].indexOf(fn);\n        if(idx >= 0) this.events[event].splice(idx, 1);\n    }\n\n    once(event: string, fn) {\n        let cb = (...args: any[])=>{\n            this.off(event, cb);\n            fn.apply(this, args);\n        };\n        this.on(event, cb);\n    }\n\n    emit(event, ...args: any[]) {\n        //console.log(this.constructor.name, event, args);\n        if(!this.events || !this.events[event]) return;\n        this.events[event].forEach(fn => {\n            fn.apply(this, args);\n        });\n    }\n};","import { Stream } from \"./stream\";\n\nexport class Bitstream {\n    public stream : Stream;\n    public bitPosition: number;\n\n    constructor(stream: Stream) {\n        this.stream = stream;\n        this.bitPosition = 0;\n    }\n\n    copy() : Bitstream {\n        let res = new Bitstream(this.stream.copy());\n        res.bitPosition = this.bitPosition;\n        return res;\n    }\n\n    offset(): number {\n        return this.stream.offset * 8 + this.bitPosition;\n    }\n\n    available(bits: number) : boolean {\n        return this.stream.available((bits+8-this.bitPosition) / 8);\n    }\n\n    advance(bits: number) {\n        let pos = this.bitPosition + bits;\n        this.stream.advance(pos >> 3);\n        this.bitPosition = pos & 7;\n    }\n\n    rewind(bits: number) {\n        let pos = this.bitPosition - bits;\n        this.stream.rewind(Math.abs(pos >> 3));\n        this.bitPosition = pos & 7;\n    }\n\n    seek(offset) {\n        let curOffset = this.offset();\n        if(offset > curOffset) return this.advance(offset-curOffset);\n        else if(offset < curOffset) return this.rewind(curOffset - offset);\n    }\n\n    align() {\n        if(this.bitPosition != 0) {\n            this.bitPosition = 0;\n            this.stream.advance(1);\n        }\n    }\n\n    read(bits:number, signed?:boolean) {\n        let res = this.peek(bits, signed);\n        this.advance(bits);\n        return res;\n    }\n\n    peek(bits:number, signed?:boolean) {\n        if(bits == 0) return 0;\n        let mBits = bits + this.bitPosition;\n        let a: any;\n        if(mBits <= 8) {\n            a = ((this.stream.peekUInt8() << this.bitPosition) & 0xff) >>> (8-bits);\n        } else if(mBits <= 16) {\n            a = ((this.stream.peekUInt16() << this.bitPosition) & 0xffff) >>> (16-bits);\n        } else if(mBits <= 24) {\n            a = ((this.stream.peekUInt24() << this.bitPosition) & 0xffffff) >>> (24-bits);\n        } else if(mBits <= 32) {\n            a = (this.stream.peekUInt32() << this.bitPosition) >>> (32-bits);\n        } else if(mBits <= 40) {\n            let a0 = this.stream.peekUInt8(0) * 0x0100000000;\n            let a1 = this.stream.peekUInt8(1) << 24 >>> 0;\n            let a2 = this.stream.peekUInt8(2) << 16;\n            let a3 = this.stream.peekUInt8(3) << 8;\n            let a4 = this.stream.peekUInt8(4);\n\n            a = a0 + a1 + a2 + a3 + a4;\n            a %= Math.pow(2, 40-this.bitPosition);\n            a = Math.floor(a/Math.pow(2, 40-this.bitPosition-bits));\n        } else throw new Error(\"Too many bits!\");\n        if(signed) {\n            if(mBits < 32) {\n                if (a >>> (bits-1)) a = ((1 << bits >>> 0) - a) * -1;\n            } else{\n                if(a / Math.pow(2, bits-1) | 0) a = (Math.pow(2, bits) - a) * -1;\n            }\n        }\n        return a;\n    }\n\n    readLSB(bits:number, signed?:boolean) {\n        let res = this.peekLSB(bits, signed);\n        this.advance(bits);\n        return res;\n    }\n\n    peekLSB(bits: number, signed?:boolean) {\n        if(bits == 0) return 0;\n        if(bits > 40) throw new Error(\"Too many bits!\");\n        let mBits = bits + this.bitPosition;\n        let a = (this.stream.peekUInt8(0)) >>> this.bitPosition;\n        if(mBits > 8) a |= (this.stream.peekUInt8(1)) << (8-this.bitPosition);\n        if(mBits > 16) a |= (this.stream.peekUInt8(2)) << (16 - this.bitPosition);\n        if(mBits > 24) a += (this.stream.peekUInt8(3)) << (24 - this.bitPosition) >>> 0;\n        if(mBits > 32) a += (this.stream.peekUInt8(4)) * Math.pow(2, 32 - this.bitPosition);\n        \n        if(mBits >= 32) a%= Math.pow(2, bits);\n        else a&=(1<<bits) - 1;\n\n        if(signed) {\n            if(mBits < 32) {\n                if(a >>> (bits - 1)) a = ((1 << bits >>> 0) - a) * -1;\n            } else {\n                if(a / Math.pow(2, bits-1) | 0) a = (Math.pow(2, bits) - a) * -1;\n            }\n        }\n        return a;\n    }\n};","import { BufferList } from \"./buffer-list\";\nimport { UnderflowError } from \"./underflow-error\";\nimport { Buffer } from \"./buffer\";\n\nexport class Stream {\n    private buf = new ArrayBuffer(16);\n    private uint8 = new Uint8Array(this.buf);\n    private int8 = new Int8Array(this.buf);\n    private uint16 = new Uint16Array(this.buf);\n    private int16 = new Int16Array(this.buf);\n    private uint32 = new Uint32Array(this.buf);\n    private int32 = new Int32Array(this.buf);\n    private float32 = new Float32Array(this.buf);\n    private float64 = (Float64Array) ? new Float64Array(this.buf) : null;\n\n    // True if little endian\n    private nativeEndian = new Uint16Array(new Uint8Array([0x12, 0x34]).buffer)[0] == 0x3412;\n\n    private list : BufferList;\n    public localOffset: number;\n    public offset: number;\n\n    constructor(list : BufferList) {\n        this.list = list;\n        this.localOffset = 0;\n        this.offset = 0;\n    }\n\n    static fromBuffer(buffer) : Stream {\n        let list = new BufferList();\n        list.append(buffer);\n        return new Stream(list);\n    }\n\n    copy() : Stream {\n        let res = new Stream(this.list.copy());\n        res.localOffset = this.localOffset;\n        res.offset = this.offset;\n        return res;\n    }\n\n    available(bytes:number) : boolean {\n        return bytes <= this.remainingBytes();\n    }\n\n    remainingBytes() : number {\n        return this.list.availableBytes - this.localOffset;\n    }\n\n    advance(bytes: number) : Stream {\n        if(!this.available(bytes))\n            throw new UnderflowError();\n        \n        this.localOffset += bytes;\n        this.offset += bytes;\n\n        while(this.list.first && this.localOffset >= this.list.first.length) {\n            this.localOffset -= this.list.first.length;\n            this.list.advance();\n        }\n\n        return this;\n    }\n\n    rewind(bytes: number) : Stream {\n        if(bytes > this.offset)\n            throw new UnderflowError();\n        \n        if(!this.list.first) {\n            this.list.rewind();\n            this.localOffset = this.list.first.length;\n        }\n\n        this.localOffset -= bytes;\n        this.offset -= bytes;\n\n        while(this.list.first.prev && this.localOffset < 0) {\n            this.list.rewind();\n            this.localOffset += this.list.first.length;\n        }\n\n        return this;\n    }\n\n    seek(position: number) {\n        if(position > this.offset) this.advance(position - this.offset);\n        else if(position < this.offset) this.rewind(this.offset - position);\n    }\n\n    readUInt8() : number {\n        if(!this.available(1)) throw new UnderflowError();\n        let a = this.list.first.data[this.localOffset];\n        this.localOffset += 1;\n        this.offset += 1;\n\n        if(this.localOffset == this.list.first.length) {\n            this.localOffset = 0;\n            this.list.advance();\n        }\n\n        return a;\n    }\n\n    peekUInt8(offset = 0) : number {\n        if(!this.available(offset + 1)) throw new UnderflowError();\n\n        offset = this.localOffset + offset;\n        let buffer = this.list.first;\n        while(buffer) {\n            if(buffer.length > offset) {\n                return buffer.data[offset];\n            }\n\n            offset -= buffer.length;\n            buffer = buffer.next;\n        }\n\n        // TODO: We should not be able to reach this should we ?\n        return 0;\n    }\n\n    read(bytes: number, litteEndian?: boolean) {\n        if(!litteEndian) litteEndian = false;\n        if(litteEndian == this.nativeEndian) {\n            for(let i=0; i < bytes; i++) this.uint8[i] = this.readUInt8();\n        } else {\n            for(let i=0; i < bytes; i++) this.uint8[bytes - i - 1] = this.readUInt8();\n        }\n    }\n\n    peek(bytes: number, offset: number, litteEndian?: boolean) {\n        if(!litteEndian) litteEndian = false;\n        if(litteEndian == this.nativeEndian) {\n            for(let i=0; i < bytes; i++) this.uint8[i] = this.peekUInt8(offset + i);\n        } else {\n            for(let i=0; i < bytes; i++) this.uint8[bytes - i - 1] = this.peekUInt8(offset + i);\n        }\n    }\n\n    readInt8() : number {\n        this.read(1);\n        return this.int8[0];\n    }\n\n    peekInt8(offset?: number) : number {\n        if(!offset) offset = 0;\n        this.peek(1, offset);\n        return this.int8[0];\n    }\n\n    readUInt16(litteEndian?: boolean) : number {\n        this.read(2, litteEndian);\n        return this.uint16[0];\n    }\n\n    peekUInt16(offset?: number, litteEndian?: boolean) : number {\n        if(!offset) offset = 0;\n        this.peek(2, offset, litteEndian);\n        return this.uint16[0];\n    }\n\n    readInt16(litteEndian?: boolean) : number {\n        this.read(2, litteEndian);\n        return this.int16[0];\n    }\n\n    peekInt16(offset?: number, litteEndian?: boolean) : number {\n        if(!offset) offset = 0;\n        this.peek(2, offset, litteEndian);\n        return this.int16[0];\n    }\n\n    readUInt24(litteEndian?: boolean) : number {\n        if(litteEndian) return this.readUInt16(true) + (this.readUInt8() << 16);\n        else return (this.readUInt16(false) << 8) + this.readUInt8();\n    }\n\n    peekUInt24(offset?: number, litteEndian?: boolean) : number {\n        if(!offset) offset = 0;\n        if(litteEndian) return this.peekUInt16(offset, true) + (this.peekUInt8(offset + 2) << 16);\n        else return (this.peekUInt16(offset) << 8) + this.peekUInt8(offset + 2);\n    }\n\n    readInt24(litteEndian?: boolean) : number {\n        if(litteEndian) return this.readUInt16(true) + (this.readInt8() << 16);\n        else return (this.readInt16(false) << 8) + this.readUInt8();\n    }\n\n    peekInt24(offset?: number, litteEndian?: boolean) : number {\n        if(!offset) offset = 0;\n        if(litteEndian) return this.peekUInt16(offset, true) + (this.peekInt8(offset + 2) << 16);\n        else return (this.peekInt16(offset) << 8) + this.peekUInt8(offset + 2);\n    }\n\n    readUInt32(litteEndian?: boolean) : number {\n        this.read(4, litteEndian);\n        return this.uint32[0];\n    }\n\n    peekUInt32(offset?: number, litteEndian?: boolean) : number {\n        if(!offset) offset = 0;\n        this.peek(4, offset, litteEndian);\n        return this.uint32[0];\n    }\n\n    readInt32(litteEndian?: boolean) : number {\n        this.read(4, litteEndian);\n        return this.int32[0];\n    }\n\n    peekInt32(offset?: number, litteEndian?: boolean) : number {\n        if(!offset) offset = 0;\n        this.peek(4, offset, litteEndian);\n        return this.int32[0];\n    }\n\n    readFloat32(litteEndian?: boolean) : number {\n        this.read(4, litteEndian);\n        return this.float32[0];\n    }\n\n    peekFloat32(offset?: number, litteEndian?: boolean) : number {\n        if(!offset) offset = 0;\n        this.peek(4, offset, litteEndian);\n        return this.float32[0];\n    }\n\n    readFloat64(litteEndian?: boolean) : number {\n        this.read(8, litteEndian);\n        if(this.float64) return this.float64[0];\n        else return this.float64Fallback();\n    }\n\n    peekFloat64(offset?: number, litteEndian?: boolean) : number {\n        if(!offset) offset = 0;\n        this.peek(8, offset, litteEndian);\n        if(this.float64) return this.float64[0];\n        else return this.float64Fallback();\n    }\n\n    private float64Fallback() : number {\n        let low = this.uint32[0];\n        let high = this.uint32[1];\n        if(high == 0 || high == 0x80000000) return 0.0;\n\n        let sign = 1 - (high >>> 31) * 2;\n        let exp = (high >>> 20) & 0x7ff;\n        let frac = high & 0xffff;\n\n        if(exp == 0x7ff) {\n            if(frac) return NaN;\n            return Infinity*sign;\n        }\n\n        exp -= 1023;\n        let out = (frac | 0x100000) * Math.pow(2, exp - 20);\n        out += low * Math.pow(2, exp - 52);\n\n        return sign*out;\n    }\n\n    readFloat80(littleEndian?: boolean) {\n        this.read(10, littleEndian);\n        return this.float80();\n    }\n\n    peekFloat80(offset?: number, litteEndian?: boolean) {\n        if(!offset) offset = 0;\n        this.peek(10, offset, litteEndian);\n        return this.float80();\n    }\n\n    private float80() {\n        let high = this.uint32[0];\n        let low = this.uint32[1];\n        let a0 = this.uint8[9]\n        let a1 = this.uint8[8]\n        \n        let sign = 1 - (a0 >>> 7) * 2;\n        let exp = ((a0 & 0x7F) << 8) | a1;\n        \n        if(exp == 0 && low == 0 && high == 0) return 0;\n            \n        if(exp == 0x7fff) {\n            if(low == 0 && high == 0) return sign * Infinity;\n            else return NaN;\n        }\n        \n        exp -= 16383;\n        let out = low * Math.pow(2, exp - 31);\n        out += high * Math.pow(2, exp - 63);\n        \n        return sign * out;\n    }\n\n    readBuffer(length: number) : Buffer {\n        let res = Buffer.allocate(length);\n        let to = res.data;\n\n        for(let i =0; i<length; i++) {\n            to[i] = this.readUInt8();\n        }\n        return res;\n    }\n\n    peekBuffer(offset: number, length: number) : Buffer {\n        let res = Buffer.allocate(length);\n        let to = res.data;\n\n        for(let i =0; i<length; i++) {\n            to[i] = this.peekUInt8(offset + i);\n        }\n        return res;\n    }\n\n    readSingleBuffer(length: number) : Buffer {\n        let res = this.list.first.slice(this.localOffset, length);\n        this.advance(res.length);\n        return res;\n    }\n\n    peekSingleBuffer(offset: number, length: number) : Buffer {\n        let res = this.list.first.slice(this.localOffset + offset, length);\n        return res;\n    }\n\n    readString(length: number, encoding?: string) : string {\n        if(!encoding) encoding = 'ascii';\n        return this.decodeString(0, length, encoding, true);\n    }\n\n    peekString(offset: number, length: number, encoding?: string) : string {\n        if(!encoding) encoding = 'ascii';\n        return this.decodeString(offset, length, encoding, false);\n    }\n\n    private decodeString(offset: number, length: number, encoding: string, advance: boolean) : string {\n        encoding = encoding.toLowerCase();\n        let nullEnd = (length == null) ? 0 : -1;\n\n        if(!length) length = Infinity;\n        let end = offset + length;\n        let result = '';\n\n        switch(encoding) {\n            case 'ascii':\n            case 'latin1':\n                let c;\n                while (offset < end && (c = this.peekUInt8(offset++)) != nullEnd)\n                    result += String.fromCharCode(c);\n                break;\n\n            case 'utf8':\n            case 'utf-8':\n                let b1: number;\n                while (offset < end && (b1 = this.peekUInt8(offset++)) != nullEnd) {\n                    if ((b1 & 0x80) == 0) {\n                        result += String.fromCharCode(b1);\n\n                    // one continuation (128 to 2047)\n                    } else if( (b1 & 0xe0) == 0xc0) {\n                        let b2 = (this.peekUInt8(offset++) & 0x3f);\n                        result += String.fromCharCode(((b1 & 0x1f) << 6) | b2);\n\n                    // two continuation (2048 to 55295 and 57344 to 65535)\n                    } else if ((b1 & 0xf0) == 0xe0) {\n                        let b2 = this.peekUInt8(offset++) & 0x3f;\n                        let b3 = this.peekUInt8(offset++) & 0x3f;\n                        result += String.fromCharCode(((b1 & 0x0f) << 12) | (b2 << 6) | b3);\n\n                    // three continuation (65536 to 1114111)\n                    } else if ((b1 & 0xf8) == 0xf0) {\n                        let b2 = this.peekUInt8(offset++) & 0x3f;\n                        let b3 = this.peekUInt8(offset++) & 0x3f;\n                        let b4 = this.peekUInt8(offset++) & 0x3f;\n\n                        // split into a surrogate pair\n                        let pt = (((b1 & 0x0f) << 18) | (b2 << 12) | (b3 << 6) | b4) - 0x10000;\n                        result += String.fromCharCode(0xd800 + (pt >> 10), 0xdc00 + (pt & 0x3ff));\n                    }\n                }\n                break;\n\n            case 'utf16-be':\n            case 'utf16be':\n            case 'utf16le':\n            case 'utf16-le':\n            case 'utf16bom':\n            case 'utf16-bom':\n                // find endianness\n                let littleEndian = false;\n                switch(encoding) {\n                    case 'utf16le':\n                    case 'utf16-le':\n                        littleEndian = true;\n                        break;\n\n                    case 'utf16bom':\n                    case 'utf16-bom':\n                        let bom;\n                        if (length < 2 || (bom = this.peekUInt16(offset)) == nullEnd) {\n                            offset += 2;\n                            if(advance) this.advance(offset);\n                            return result;\n                        }\n\n                        littleEndian = (bom == 0xfffe);\n                        offset += 2;\n                }\n                let w1;\n                while(offset < end && (w1 = this.peekUInt16(offset, littleEndian)) != nullEnd) {\n                    offset += 2;\n\n                    if(w1 < 0xd800 || w1 > 0xdfff) result += String.fromCharCode(w1);\n                    else{\n                        if(w1 > 0xdbff) throw new Error(\"Invalid utf16 sequence.\");\n\n                        let w2 = this.peekUInt16(offset, littleEndian);\n                        if(w2 < 0xdc00 || w2 > 0xdfff) throw new Error(\"Invalid utf16 sequence.\");\n\n                        result += String.fromCharCode(w1, w2);\n                        offset += 2;\n                    }\n                }\n                if(w1 == nullEnd) offset += 2;\n                break;\n            default:\n                throw new Error(\"Unknown encoding: \" + encoding);\n        }\n\n        if(advance) this.advance(offset);\n        return result;\n    }\n};","export class SeekPoint {\n    offset: number;\n    timestamp: number;\n\n    constructor(offset?: number, timestamp?: number) {\n        this.offset = offset || 0;\n        this.timestamp = timestamp || 0;\n    }\n}","import * as AV from \"./core\"\nimport { SeekPoint } from \"./seek-point\";\n\nexport interface DemuxerRegistration {\n    new (...args: any[]): Demuxer;\n    probe(buffer: AV.Stream): boolean;\n}\n\nexport abstract class Demuxer extends AV.EventHost {\n    private source: AV.EventHost;\n    public stream: AV.Stream;\n    public seekPoints: SeekPoint[];\n    public format: any;\n\n    constructor(source: AV.EventHost, chunk: AV.Buffer) {\n        super();\n        let list = new AV.BufferList();\n        list.append(chunk);\n        this.stream = new AV.Stream(list);\n        this.source = source;\n\n        let received = false;\n        this.source.on(\"data\", (chunk) => {\n            received = true;\n            list.append(chunk);\n            try {\n                this.readChunk();\n            } catch(e) {\n                this.emit(\"error\", e);\n            }\n        });\n        this.source.on(\"error\", (err) => {\n            this.emit(\"error\", err);\n        });\n        this.source.on(\"end\", () => {\n            if(!received) this.readChunk();\n            this.emit(\"end\");\n        });\n        this.seekPoints = [];\n        this.init();\n    }\n\n    abstract init();\n    abstract readChunk();\n\n    addSeekPoint(offset, timestamp) {\n        let index = this.searchTimestamp(timestamp);\n        this.seekPoints.splice(index, 0, new SeekPoint(offset, timestamp));\n    }\n\n    searchTimestamp(timestamp: number, backward? :boolean) {\n        let low = 0;\n        let high = this.seekPoints.length;\n\n        if(high > 0 && this.seekPoints[high - 1].timestamp < timestamp)\n            return high;\n        \n        while(low < high) {\n            let mid = (low + high) >> 1;\n            let time = this.seekPoints[mid].timestamp;\n\n            if(time < timestamp)\n                low = mid + 1;\n            else if(time >= timestamp)\n                high = mid;\n        }\n\n        if(high > this.seekPoints.length)\n            high = this.seekPoints.length;\n        \n        return high;\n    }\n\n    seek(timestamp) : SeekPoint {\n        if(this.format && this.format.framesPerPacket > 0 && this.format.bytesPerPacket > 0) {\n            return new SeekPoint(this.format.bytesPerPacket * timestamp / this.format.framesPerPacket, timestamp);\n        } else {\n            let idx = this.searchTimestamp(timestamp);\n            return this.seekPoints[idx];\n        }\n    }\n\n    private static demuxers : DemuxerRegistration[] = [];\n\n    static register(demuxer: DemuxerRegistration) {\n        this.demuxers.push(demuxer);\n    }\n\n    static find(buffer: AV.Buffer) {\n        let stream = AV.Stream.fromBuffer(buffer);\n        for (const format of this.demuxers) {\n            let offset = stream.offset;\n            try {\n                if(format.probe(stream)) return format;\n            } catch(e){\n                console.error(e);\n            }\n\n            stream.seek(offset);\n        }\n        return null;\n    }\n}","import { Demuxer } from \"../demuxer\";\nimport { Buffer, Stream } from '../core';\n\nexport class WAVEDemuxer extends Demuxer {\n    static probe(stream: Stream) : boolean {\n        return stream.peekString(0,4) === \"RIFF\" && stream.peekString(8, 4) === \"WAVE\";\n    }\n\n    static formats: {[idx:number]:string} = {\n        0x0001: 'lpcm',\n        0x0003: 'lpcm',\n        0x0006: 'alaw',\n        0x0007: 'ulaw'\n    };\n\n    private fileSize: number;\n    private readStart: boolean;\n    private readHeaders: boolean;\n    private type: string;\n    private len: number;\n    private sentDuration: boolean;\n\n    init() {\n    }\n\n    readChunk() {\n        if(!this.readStart && this.stream.available(12)) {\n            if(this.stream.readString(4) != \"RIFF\")\n                return this.emit(\"error\", \"Invalid WAV file.\");\n            this.fileSize = this.stream.readUInt32(true);\n            this.readStart = true;\n\n            if(this.stream.readString(4) != \"WAVE\")\n                return this.emit(\"error\", \"Invalid WAV file.\");\n        }\n        while(this.stream.available(1)) {\n            if(!this.readHeaders && this.stream.available(8)) {\n                this.type = this.stream.readString(4);\n                this.len = this.stream.readUInt32(true);\n            }\n            switch(this.type) {\n                case \"fmt \":\n                    let encoding = this.stream.readUInt16(true);\n                    if(!WAVEDemuxer.formats[encoding]) return this.emit(\"error\", \"Unsupported format in WAV file.\");\n                    this.format = {\n                        formatID: WAVEDemuxer.formats[encoding],\n                        floatingPoint: encoding == 0x0003,\n                        littleEndian: WAVEDemuxer.formats[encoding] == \"lpcm\",\n                        channelsPerFrame: this.stream.readUInt16(true),\n                        sampleRate: this.stream.readUInt32(true),\n                        framesPerPacket: 1\n                    };\n                    this.stream.advance(4); // bytes/sec\n                    this.stream.advance(2); // block align\n\n                    this.format.bitsPerChannel = this.stream.readUInt16(true);\n                    this.format.bytesPerPacket = (this.format.bitsPerChannel/8) * this.format.channelsPerFrame;\n\n                    this.emit(\"format\", this.format);\n                    this.stream.advance(this.len - 16);\n                    break;\n                case \"data\":\n                    if(!this.sentDuration) {\n                        let bytes = this.format.bitsPerChannel/8;\n                        this.emit(\"duration\", this.len / bytes / this.format.channelsPerFrame / this.format.sampleRate*1000 | 0);\n                        this.sentDuration = true;\n                    }\n\n                    let buffer = this.stream.readSingleBuffer(this.len);\n                    this.len -= buffer.length;\n                    this.readHeaders = this.len > 0;\n                    this.emit(\"data\", buffer);\n                    break;\n                default:\n                    if(!this.stream.available(this.len)) return;\n                    this.stream.advance(this.len);\n                    break;\n            }\n            if(this.type !=\"data\") this.readHeaders = false;\n        }\n    }\n};\n\nDemuxer.register(WAVEDemuxer);","import { Demuxer } from '../demuxer';\n\nexport class AUDemuxer extends Demuxer {\n  init() {\n  }\n  static probe(buffer) {\n    return (buffer.peekString(0, 4) == '.snd');\n  }\n\n  static readonly bps = {\n    0: 8,\n    1: 8,\n    2: 16,\n    3: 24,\n    4: 32,\n    5: 32,\n    6: 64,\n    26: 8\n  };\n\n  static readonly formats = {\n    1: 'ulaw',\n    27: 'alaw'\n  }\n\n  private readHeader: boolean;\n\n  readChunk() {\n    if (!this.readHeader && this.stream.available(24)) {\n      if (this.stream.readString(4) != '.snd')\n        return this.emit('error', 'Invalid AU file.');\n\n      let size = this.stream.readUInt32()\n      let dataSize = this.stream.readUInt32()\n      let encoding = this.stream.readUInt32()\n\n      this.format = {\n        formatID: AUDemuxer.formats[encoding] || 'lpcm',\n        littleEndian: false,\n        floatingPoint: encoding == 6 || encoding == 7,\n        bitsPerChannel: AUDemuxer.bps[encoding - 1],\n        sampleRate: this.stream.readUInt32(),\n        channelsPerFrame: this.stream.readUInt32(),\n        framesPerPacket: 1\n      };\n\n      if (!this.format.bitsPerChannel)\n        return this.emit('error', 'Unsupported encoding in AU file.');\n\n      this.format.bytesPerPacket = (this.format.bitsPerChannel / 8) * this.format.channelsPerFrame;\n\n      if (dataSize != 0xffffffff) {\n        let bytes = this.format.bitsPerChannel / 8;\n        this.emit('duration', dataSize / bytes / this.format.channelsPerFrame / this.format.sampleRate * 1000 | 0);\n      }\n\n      this.emit('format', this.format);\n      this.readHeader = true\n    }\n    if (this.readHeader) {\n      while (this.stream.available(1))\n        this.emit('data', this.stream.readSingleBuffer(this.stream.remainingBytes()));\n    }\n  }\n}\nDemuxer.register(AUDemuxer);","import {Demuxer} from '../demuxer';\n\nexport class AIFFDemuxer extends Demuxer {\n    init() {\n    }\n    \n    static probe(buffer) {\n        let s = buffer.peekString(8, 4);\n        return buffer.peekString(0, 4) == 'FORM' && (s == \"AIFF\" || s == \"AIFC\");\n    }\n\n    private readStart: boolean;\n    private fileSize: number;\n    private fileType: string;\n    private readHeaders: boolean;\n    private readSSNDHeader: boolean;\n    private type: string;\n    private len: number;\n        \n    readChunk() {\n        if(!this.readStart && this.stream.available(12)) {\n            if(this.stream.readString(4) != 'FORM')\n                return this.emit('error', 'Invalid AIFF.');\n                \n            this.fileSize = this.stream.readUInt32();\n            this.fileType = this.stream.readString(4);\n            this.readStart = true;\n            \n            if(this.fileType != 'AIFF' && this.fileType != 'AIFC')\n                return this.emit('error', 'Invalid AIFF.');\n        }\n\n        while(this.stream.available(1)) {\n            if(!this.readHeaders && this.stream.available(8)) {\n                this.type = this.stream.readString(4);\n                this.len = this.stream.readUInt32();\n            }\n            switch(this.type) {\n                case 'COMM':\n                    if(!this.stream.available(this.len)) return;\n                    \n                    this.format = {\n                        formatID: 'lpcm',\n                        channelsPerFrame: this.stream.readUInt16(),\n                        sampleCount: this.stream.readUInt32(),\n                        bitsPerChannel: this.stream.readUInt16(),\n                        sampleRate: this.stream.readFloat80(),\n                        framesPerPacket: 1,\n                        littleEndian: false,\n                        floatingPoint: false\n                    };\n\n                    this.format.bytesPerPacket = (this.format.bitsPerChannel / 8) * this.format.channelsPerFrame;\n                    \n                    if (this.fileType == 'AIFC') {\n                        let format = this.stream.readString(4)\n                        \n                        this.format.littleEndian = format == 'sowt' && this.format.bitsPerChannel > 8;\n                        this.format.floatingPoint = format == 'fl32' || format == 'fl64';\n                        \n                        if(['twos', 'sowt', 'fl32', 'fl64', 'NONE'].indexOf(format) != -1)\n                            format = 'lpcm';\n                        this.format.formatID = format;\n                        this.len -= 4;\n                    }\n                    this.stream.advance(this.len - 18);\n                    this.emit('format', this.format);\n                    this.emit('duration', this.format.sampleCount / this.format.sampleRate * 1000 | 0);\n                    break;\n                case 'SSND':\n                    if(!(this.readSSNDHeader && this.stream.available(4))) {\n                        let offset = this.stream.readUInt32();\n                        this.stream.advance(4); // skip block size\n                        this.stream.advance(offset); // skip to data\n                        this.readSSNDHeader = true;\n                    }\n                        \n                    let buffer = this.stream.readSingleBuffer(this.len);\n                    this.len -= buffer.length;\n                    this.readHeaders = this.len > 0;\n                    this.emit('data', buffer);\n                    break;\n                default:\n                    if(!this.stream.available(this.len)) return;\n                    this.stream.advance(this.len);\n            }\n            if(this.type != 'SSND') this.readHeaders = false;\n        }\n    }\n}\n\nDemuxer.register(AIFFDemuxer);","export * from './wave';\nexport * from './au';\nexport * from './aiff';\n// TODO: m4a, caf","import { EventHost, Stream, Bitstream, BufferList, Buffer, UnderflowError } from \"./core\";\nimport { Demuxer } from \"./demuxer\";\n\nexport interface DecoderRegistration {\n    new (demuxer: Demuxer, format): Decoder;\n}\n\nexport abstract class Decoder extends EventHost {\n    protected stream: Stream;\n    protected bitstream: Bitstream;\n    private receivedFinalBuffer: boolean;\n    private waiting: boolean;\n    protected demuxer: Demuxer;\n    protected format: any;\n    \n    constructor(demuxer: any, format: any) {\n        super();\n        this.demuxer = demuxer;\n        this.format = format;\n        let list = new BufferList();\n        this.stream = new Stream(list);\n        this.bitstream = new Bitstream(this.stream);\n        \n        this.receivedFinalBuffer = false;\n        this.waiting = false;\n\n        this.demuxer.on(\"cookie\", (cookie) => {\n            try {\n                this.setCookie(cookie);\n            } catch(error) {\n                this.emit(\"error\", error);\n            }\n        });\n        this.demuxer.on(\"data\", (chunk: Buffer) => {\n            list.append(chunk);\n            if(this.waiting) this.decode();\n        });\n        this.demuxer.on(\"end\", () => {\n            this.receivedFinalBuffer = true;\n            if(this.waiting) this.decode();\n        });\n\n        this.init();\n    }\n\n    abstract init();\n\n    abstract setCookie(cookie);\n\n    abstract readChunk();\n\n    decode() {\n        this.waiting = !this.receivedFinalBuffer;\n        let offset = this.bitstream.offset();\n\n        let packet;\n        try {\n            packet = this.readChunk();\n        } catch(error) {\n            if(!(error instanceof UnderflowError)) {\n                this.emit(\"error\", error);\n                return false;\n            }\n        }\n\n        if(packet) {\n            this.emit(\"data\", packet);\n            if(this.receivedFinalBuffer) this.emit(\"end\");\n            return true;\n        } else if(!this.receivedFinalBuffer) {\n            this.bitstream.seek(offset);\n            this.waiting = true;\n        } else {\n            this.emit(\"end\");\n        }\n        return false;\n    }\n\n    seek(timestamp) {\n        let seekPoint = this.demuxer.seek(timestamp);\n        this.stream.seek(seekPoint.offset);\n        return seekPoint.timestamp;\n    }\n\n    private static codecs : { [index:string] : DecoderRegistration } = {};\n\n    static register(id: string, decoder: DecoderRegistration) {\n        this.codecs[id] = decoder;\n    }\n\n    static find(id: string) : DecoderRegistration {\n        return this.codecs[id] || null;\n    }\n}","import { Decoder } from '../decoder';\n\nexport class LPCMDecoder extends Decoder {\n  init() {}\n  setCookie(cookie: any) {}\n  readChunk() {\n    let stream = this.stream;\n    let littleEndian = this.format.littleEndian;\n    let chunkSize = Math.min(4096, stream.remainingBytes());\n    let samples = chunkSize / (this.format.bitsPerChannel / 8) | 0;\n\n    let output: Float32Array | Float64Array | Int8Array | Int16Array | Int32Array = null;\n\n    if (chunkSize < this.format.bitsPerChannel / 8) return null;\n\n    if (this.format.floatingPoint) {\n      switch (this.format.bitsPerChannel) {\n        case 32:\n          output = new Float32Array(samples);\n          for (let i = 0; i < samples; i++)\n            output[i] = stream.readFloat32(littleEndian);\n          break;\n        case 64:\n          output = new Float64Array(samples);\n          for (let i = 0; i < samples; i++)\n            output[i] = stream.readFloat64(littleEndian);\n          break;\n        default:\n          throw new Error('Unsupported bit depth.');\n      }\n    } else {\n      switch (this.format.bitsPerChannel) {\n        case 8:\n          output = new Int8Array(samples);\n          for (let i = 0; i < samples; i++)\n            output[i] = stream.readInt8();\n          break;\n        case 16:\n          output = new Int16Array(samples);\n          for (let i = 0; i < samples; i++)\n            output[i] = stream.readInt16(littleEndian);\n          break;\n        case 24:\n          output = new Int32Array(samples);\n          for (let i = 0; i < samples; i++)\n            output[i] = stream.readInt24(littleEndian);\n          break;\n        case 32:\n          output = new Int32Array(samples);\n          for (let i = 0; i < samples; i++)\n            output[i] = stream.readInt32(littleEndian);\n          break;\n        default:\n          throw new Error('Unsupported bit depth.');\n      }\n    }\n\n    return output;\n  }\n};\n\nDecoder.register(\"lpcm\", LPCMDecoder);","import { Decoder } from '../decoder';\n\nexport class XLAWDecoder extends Decoder {\n    setCookie(cookie: any) {}\n    static readonly SIGN_BIT   = 0x80\n    static readonly QUANT_MASK = 0xf\n    static readonly SEG_SHIFT  = 4\n    static readonly SEG_MASK   = 0x70\n    static readonly BIAS       = 0x84\n\n    private table : Int16Array;\n    \n    init() {\n        this.format.bitsPerChannel = 16;\n        this.table = new Int16Array(256);\n        \n        if (this.format.formatID == 'ulaw') {\n            for(let i = 0; i<this.table.length; i++) {\n                // Complement to obtain normal u-law value.\n                let val = ~i;\n            \n                // Extract and bias the quantization bits. Then\n                // shift up by the segment number and subtract out the bias.\n                let t = ((val & XLAWDecoder.QUANT_MASK) << 3) + XLAWDecoder.BIAS;\n                t <<= (val & XLAWDecoder.SEG_MASK) >>> XLAWDecoder.SEG_SHIFT\n            \n                this.table[i] = (val & XLAWDecoder.SIGN_BIT) ? (XLAWDecoder.BIAS - t) : (t - XLAWDecoder.BIAS);\n            }\n        } else {\n            for(let i = 0; i<this.table.length; i++) {\n                let val = i ^ 0x55;\n                let t = val & XLAWDecoder.QUANT_MASK;\n                let seg = (val & XLAWDecoder.SEG_MASK) >>> XLAWDecoder.SEG_SHIFT;\n                \n                if(seg) t = (t + t + 1 + 32) << (seg + 2);\n                else t = (t + t + 1) << 3;\n                    \n                this.table[i] = (val & XLAWDecoder.SIGN_BIT) ? t : -t;\n            }\n        }\n    }\n\n    readChunk() {\n        let samples = Math.min(4096, this.stream.remainingBytes());\n        if(samples == 0) return null;\n        \n        let output = new Int16Array(samples);\n        for(let i = 0; i<samples; i++)\n            output[i] = this.table[this.stream.readUInt8()];\n            \n        return output\n    }\n}\n\nDecoder.register('ulaw', XLAWDecoder);\nDecoder.register('alaw', XLAWDecoder);","import { EventHost } from \"./core\";\n\nexport abstract class AudioDeviceBackend extends EventHost {\n    abstract getDeviceTime() : number;\n    abstract destroy();\n    sampleRate : number;\n}","import { EventHost } from \"./core\";\nimport { AudioDeviceBackend } from \"./audio-device-backend\";\n\nexport interface DeviceRegistration {\n    new (...args: any[]): AudioDeviceBackend;\n    supported: boolean;\n}\n\nexport class AudioDevice extends EventHost {\n    private sampleRate: number;\n    private channels: number;\n    private playing: boolean;\n    private currentTime: number;\n    private _lastTime: number;\n\n    private _timer: any;\n    private refill: any;\n    private device: AudioDeviceBackend;\n\n    constructor(sampleRate: number, channels: number) {\n        super();\n        this.sampleRate = sampleRate;\n        this.channels = channels;\n        this.playing = false;\n        this.currentTime = 0;\n        this._lastTime = 0;\n    }\n\n    start() {\n        if(this.playing) return;\n        this.playing = true;\n\n        if(!this.device) this.device = AudioDevice.create(this.sampleRate, this.channels);\n        if(!this.device) throw new Error(\"No supported audio device found.\");\n\n        this._lastTime = this.device.getDeviceTime();\n        this._timer = setInterval(this.updateTime.bind(this), 200);\n\n        this.refill = (buffer: Buffer) => {\n            this.emit(\"refill\", buffer);\n        };\n\n        this.device.on(\"refill\", this.refill);\n    }\n\n    stop() {\n        if(!this.playing) return;\n        this.playing = false;\n\n        if(this.device) this.device.off(\"refill\", this.refill);\n        clearInterval(this._timer);\n    }\n\n    destroy() {\n        this.stop();\n        if(this.device) this.device.destroy();\n    }\n\n    seek(cTime) {\n        this.currentTime = cTime;\n        if(this.playing) this._lastTime = this.device.getDeviceTime();\n        this.emit(\"timeUpdate\", this.currentTime);\n    }\n\n    updateTime() {\n        let time = this.device.getDeviceTime();\n        this.currentTime += (time-this._lastTime) / this.device.sampleRate * 1000 | 0;\n        this._lastTime = time;\n        this.emit(\"timeUpdate\", this.currentTime);\n    }\n\n    private static devices : DeviceRegistration[] = [];\n\n    static register(device: DeviceRegistration) {\n        this.devices.push(device);\n    }\n\n    static create(sampleRate: number, channels: number) {\n        for(let device of this.devices) {\n            if(device.supported) return new device(sampleRate, channels);\n        }\n        return null;\n    }\n}","//JavaScript Audio Resampler\n//Copyright (C) 2011-2015 Grant Galitz\n//Released to Public Domain\n//Ported to Typescript by Dominik Thalhammer, 2019\nexport class Resampler {\n\n    private resampler: (a: Float32Array) => Float32Array;\n    private ratioWeight: number;\n    private lastWeight: number;\n    private outputBuffer: Float32Array;\n    private lastOutput: Float32Array;\n    private tailExists: boolean;\n\n    constructor(\n        private fromSampleRate: number,\n        private toSampleRate: number,\n        private channels: number,\n        private inputBufferLength: number\n    ) {\n        if (!this.channels) this.channels = 0;\n\n        if (!(this.fromSampleRate > 0 && this.toSampleRate > 0 && this.channels > 0))\n            throw (new Error(\"Invalid settings specified for the resampler.\"));\n        this.initialize();\n    }\n\n    private initialize() {\n        //Perform some checks:\n        if (this.fromSampleRate == this.toSampleRate) {\n            //Setup a resampler bypass:\n            this.resampler = this.bypassResampler;    //Resampler just returns what was passed through.\n            this.ratioWeight = 1;\n        } else {\n            this.ratioWeight = this.fromSampleRate / this.toSampleRate;\n            if (this.fromSampleRate < this.toSampleRate) {\n                /*\n                  Use generic linear interpolation if upsampling,\n                  as linear interpolation produces a gradient that we want\n                  and works fine with two input sample points per output in this case.\n                */\n                this.compileLinearInterpolationFunction();\n                this.lastWeight = 1;\n            } else {\n                /*\n                  Custom resampler I wrote that doesn't skip samples\n                  like standard linear interpolation in high downsampling.\n                  This is more accurate than linear interpolation on downsampling.\n                */\n                this.compileMultiTapFunction();\n                this.tailExists = false;\n                this.lastWeight = 0;\n            }\n\n            var outputBufferSize = (Math.ceil(this.inputBufferLength * this.toSampleRate / this.fromSampleRate / this.channels * 1.01) * this.channels) + this.channels;\n            this.outputBuffer = new Float32Array(outputBufferSize);\n            this.lastOutput = new Float32Array(this.channels);\n        }\n    }\n\n    private bypassResampler(inputBuffer: Float32Array): Float32Array {\n        return inputBuffer;\n    };\n\n    private compileLinearInterpolationFunction() {\n        var toCompile = \"var outputOffset = 0;\\\n          var bufferLength = buffer.length;\\\n          if (bufferLength > 0) {\\\n            var weight = this.lastWeight;\\\n            var firstWeight = 0;\\\n            var secondWeight = 0;\\\n            var sourceOffset = 0;\\\n            var outputOffset = 0;\\\n            var outputBuffer = this.outputBuffer;\\\n            for (; weight < 1; weight += \" + this.ratioWeight + \") {\\\n              secondWeight = weight % 1;\\\n              firstWeight = 1 - secondWeight;\";\n        for (var channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"outputBuffer[outputOffset++] = (this.lastOutput[\" + channel + \"] * firstWeight) + (buffer[\" + channel + \"] * secondWeight);\";\n        }\n        toCompile += \"}\\\n            weight -= 1;\\\n            for (bufferLength -= \" + this.channels + \", sourceOffset = Math.floor(weight) * \" + this.channels + \"; sourceOffset < bufferLength;) {\\\n              secondWeight = weight % 1;\\\n              firstWeight = 1 - secondWeight;\";\n        for (var channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"outputBuffer[outputOffset++] = (buffer[sourceOffset\" + ((channel > 0) ? (\" + \" + channel) : \"\") + \"] * firstWeight) + (buffer[sourceOffset + \" + (this.channels + channel) + \"] * secondWeight);\";\n        }\n        toCompile += \"weight += \" + this.ratioWeight + \";\\\n              sourceOffset = Math.floor(weight) * \" + this.channels + \";\\\n            }\";\n        for (var channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"this.lastOutput[\" + channel + \"] = buffer[sourceOffset++];\";\n        }\n        toCompile += \"this.lastWeight = weight % 1;\\\n          }\\\n          return this.outputBuffer;\";\n\n        this.resampler = Function(\"buffer\", toCompile) as (a: Float32Array) => Float32Array;\n    }\n\n    private compileMultiTapFunction() {\n        var toCompile = \"var outputOffset = 0;\\\n          var bufferLength = buffer.length;\\\n          if (bufferLength > 0) {\\\n            var weight = 0;\";\n        for (var channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"var output\" + channel + \" = 0;\"\n        }\n        toCompile += \"var actualPosition = 0;\\\n            var amountToNext = 0;\\\n            var alreadyProcessedTail = !this.tailExists;\\\n            this.tailExists = false;\\\n            var outputBuffer = this.outputBuffer;\\\n            var currentPosition = 0;\\\n            do {\\\n              if (alreadyProcessedTail) {\\\n                weight = \" + this.ratioWeight + \";\";\n        for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"output\" + channel + \" = 0;\"\n        }\n        toCompile += \"}\\\n              else {\\\n                weight = this.lastWeight;\";\n        for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"output\" + channel + \" = this.lastOutput[\" + channel + \"];\"\n        }\n        toCompile += \"alreadyProcessedTail = true;\\\n              }\\\n              while (weight > 0 && actualPosition < bufferLength) {\\\n                amountToNext = 1 + actualPosition - currentPosition;\\\n                if (weight >= amountToNext) {\";\n        for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"output\" + channel + \" += buffer[actualPosition++] * amountToNext;\"\n        }\n        toCompile += \"currentPosition = actualPosition;\\\n                  weight -= amountToNext;\\\n                }\\\n                else {\";\n        for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"output\" + channel + \" += buffer[actualPosition\" + ((channel > 0) ? (\" + \" + channel) : \"\") + \"] * weight;\"\n        }\n        toCompile += \"currentPosition += weight;\\\n                  weight = 0;\\\n                  break;\\\n                }\\\n              }\\\n              if (weight <= 0) {\";\n        for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"outputBuffer[outputOffset++] = output\" + channel + \" / \" + this.ratioWeight + \";\"\n        }\n        toCompile += \"}\\\n              else {\\\n                this.lastWeight = weight;\";\n        for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"this.lastOutput[\" + channel + \"] = output\" + channel + \";\"\n        }\n        toCompile += \"this.tailExists = true;\\\n                break;\\\n              }\\\n            } while (actualPosition < bufferLength);\\\n          }\\\n          return this.outputBuffer;\";\n\n        this.resampler = Function(\"buffer\", toCompile) as (a: Float32Array) => Float32Array;\n    };\n};","import { AudioDeviceBackend } from \"../audio-device-backend\";\nimport { AudioDevice } from \"../audio-device\";\nimport { Resampler } from './resampler';\n\nexport class WebAudioDevice extends AudioDeviceBackend {\n    static Context = (window as any).AudioContext || (window as any).webkitAudioContext;\n    static supported = WebAudioDevice.Context;\n\n    static sharedContext = null;\n\n    private context: AudioContext;\n    private deviceSampleRate: number;\n    private bufferSize: number;\n    private channels: number;\n    private resampler: any = null;\n    private node: ScriptProcessorNode;\n\n    constructor(sampleRate: number, channels: number) {\n        super();\n\n        WebAudioDevice.sharedContext = WebAudioDevice.sharedContext || new WebAudioDevice.Context();\n\n        this.context = WebAudioDevice.sharedContext;\n        this.deviceSampleRate = this.context.sampleRate;\n        this.sampleRate = sampleRate;\n        this.channels = channels;\n\n        this.bufferSize = Math.ceil(4096 / (this.deviceSampleRate / this.sampleRate)*this.channels);\n        this.bufferSize += this.bufferSize % this.channels;\n\n\n        if(this.deviceSampleRate != this.sampleRate)\n            this.resampler = new Resampler(this.sampleRate, this.deviceSampleRate, this.channels, this.bufferSize);\n\n        this.node = this.context[\"createScriptProcessor\"](4096, this.channels, this.channels);\n        this.node.onaudioprocess = this.refill.bind(this);\n        this.node.connect(this.context.destination);\n    }\n\n    refill(event: AudioProcessingEvent) {\n        let outputBuffer = event.outputBuffer;\n        let channelCount = outputBuffer.numberOfChannels;\n        let channels = new Array(channelCount);\n\n        for(let i=0; i<channelCount; i++) {\n            channels[i] = outputBuffer.getChannelData(i);\n        }\n\n        let data = new Float32Array(this.bufferSize);\n        this.emit(\"refill\", data);\n\n        if(this.resampler)\n            data = this.resampler.resampler(data);\n        \n        for(let i=0; i<outputBuffer.length; i++) {\n            for(let n=0; n<channelCount; n++)\n                channels[n][i] = data[i*channelCount + n];\n        }\n    }\n\n    destroy() {\n        this.node.disconnect(0);\n    }\n\n    getDeviceTime() : number {\n        return this.context.currentTime * this.sampleRate;\n    }\n};\n\nAudioDevice.register(WebAudioDevice);","import { Buffer } from './core'\nexport abstract class Filter {\n    get value() {\n        return this.context[this.key];\n    }\n    constructor(private context, private key) {\n    }\n\n    abstract process(buffer: Buffer);\n}","import { Filter } from '../filter'\n\nexport class BalanceFilter extends Filter {\n    process(buffer) {\n        if(this.value == 0) return;\n        if(buffer.length % 2 != 0) throw new Error(\"Odd buffer passed to balance filter\");\n        let pan = Math.max(-50, Math.min(50, this.value));\n        let panL = Math.min(1, (50 - pan) / 50);\n        let panR = Math.min(1, (50 + pan) / 50);\n\n        for(let i=0; i<buffer.length; i+=2) {\n            buffer[i] *= panL;\n            buffer[i + 1] *= panR;\n        }\n    }\n}","import { Filter } from '../filter'\n\nexport class VolumeFilter extends Filter {\n    process(buffer) {\n        if(this.value >= 100) return;\n        let vol = Math.max(0, Math.min(100, this.value)) / 100;\n\n        for(let i=0; i<buffer.length; i++) {\n            buffer[i] *= vol;\n        }\n    }\n}","import { ISource } from '../source';\nimport { BufferList, Buffer, EventHost } from '../core';\n\nexport class BufferSource extends EventHost implements ISource {\n    private list: BufferList;\n    private paused: boolean;\n    private _timer: any;\n\n    constructor(input: BufferList | Buffer | ArrayBuffer) {\n        super();\n        if(input instanceof BufferList) {\n            this.list = input;\n        } else {\n            this.list = new BufferList();\n            this.list.append(new Buffer(input));\n        }\n\n        this.paused = true;\n    }\n\n    private setImmediate(fn) {\n        if(global.setImmediate) return global.setImmediate(fn);\n        else return global.setTimeout(fn, 0);\n    }\n\n    private clearImmediate(timer) {\n        if(global.clearImmediate) return global.clearImmediate(timer);\n        else return global.clearTimeout(timer);\n    }\n\n    start() {\n        this.paused = false;\n        this._timer = this.setImmediate(this.loop.bind(this));\n    }\n\n    loop() {\n        this.emit(\"progress\", ((this.list.numBuffers - this.list.availableBuffers + 1) / this.list.numBuffers * 100) | 0);\n        this.emit(\"data\", this.list.first);\n        if(this.list.advance()) this.setImmediate(this.loop.bind(this));\n        else this.emit(\"end\");\n    }\n\n    pause() {\n        this.clearImmediate(this._timer);\n        this.paused = true;\n    }\n\n    reset() {\n        this.pause();\n        this.list.rewind();\n    }\n}","import * as AV from '../core';\n\nexport class FileSource extends AV.EventHost {\n  private offset: number;\n  private length: number;\n  private chunkSize: number;\n  private reader: FileReader;\n  private active: boolean;\n\n  constructor(private file: File | Blob) {\n    super();\n    if(!(file instanceof File) && !(file instanceof Blob))\n      throw new TypeError(\"file argument must be a Blob or File\");\n    if(!FileReader)\n      throw new Error(\"This browser does not have FileReader support\");\n    this.offset = 0;\n    this.length = file.size;\n    this.chunkSize = 1 << 20;\n    if(!this.file.slice) this.file.slice = this.file[\"webkitSlice\"] || this.file[\"mozSlice\"];\n  }\n\n  start() {\n    if(this.reader && !this.active)\n      return this.loop();\n    \n    this.reader = new FileReader();\n    this.active = true;\n\n    this.reader.onload = (e) => {\n      let buf = new AV.Buffer(new Uint8Array((e.target as any).result as ArrayBuffer))\n      this.offset += buf.length;\n      this.emit('data', buf);   \n      this.active = false;   \n      if(this.offset < this.length) this.loop();\n    };\n    this.reader.onloadend = (e) => {\n      if(this.offset == this.length) {\n        this.emit(\"end\");\n        this.reader = null;\n      }\n    };\n    this.reader.onerror = (e) => {\n      this.emit(\"error\", e);\n    };\n    this.reader.onprogress = (e) => {\n      this.emit('progress', (this.offset + e.loaded) / this.length * 100);\n    };\n    this.loop();\n  }\n\n  private loop() {\n    this.active = true;\n    let endPos = Math.min(this.offset + this.chunkSize, this.length);\n    let blob = this.file.slice(this.offset, endPos);\n    this.reader.readAsArrayBuffer(blob);\n  }\n\n  pause() {\n    this.active = false;\n    try {\n      this.reader.abort();\n    } catch(e){}\n  }\n\n  reset() {\n    this.pause();\n    this.offset = null;\n  }\n}\n","import * as AV from '../core';\n\nexport class HTTPSource extends AV.EventHost {\n  private chunkSize: number;\n  private inflight: boolean;\n  private length: number;\n  private xhr: XMLHttpRequest;\n  private offset: number;\n\n  constructor(private file, private opts?: any) {\n    super();\n    if (!this.opts) this.opts = {};\n    this.chunkSize = 1 << 20;\n    this.inflight = false;\n    if (this.opts.length)\n      this.length = this.opts.length;\n    this.reset();\n  }\n\n  start() {\n    if (this.length && !this.inflight)\n      return this.loop();\n    this.inflight = true;\n    this.xhr = new XMLHttpRequest();\n    this.xhr.onload = (event) => {\n      this.length = parseInt(this.xhr.getResponseHeader(\"Content-Length\"));\n      this.inflight = false;\n      this.loop();\n    };\n    this.xhr.onerror = (err) => {\n      this.pause();\n      this.emit(\"error\", err);\n    };\n    this.xhr.onabort = () => {\n      this.inflight = false;\n    };\n    this.xhr.open(\"HEAD\", this.file, true);\n    this.xhr.send(null);\n  }\n\n  private loop() {\n    if (this.inflight || !this.length)\n      return this.emit(\"error\", 'Something is wrong in HTTPSource.loop');\n    this.inflight = true;\n    this.xhr = new XMLHttpRequest();\n    this.xhr.onload = (event) => {\n      let buf: Uint8Array;\n      if (this.xhr.response) buf = new Uint8Array(this.xhr.response);\n      else {\n        let txt = this.xhr.responseText;\n        buf = new Uint8Array(txt.length);\n        for (let i = 0; i < txt.length; i++) buf[i] = txt.charCodeAt(i) & 0xff;\n      }\n\n      let buffer = new AV.Buffer(buf);\n      this.offset += buffer.length;\n      this.emit(\"data\", buffer);\n      if (this.offset >= this.length) this.emit(\"end\");\n\n      this.inflight = false;\n      if (this.offset < this.length) this.loop();\n    };\n    this.xhr.onprogress = (event) => {\n      this.emit(\"progress\", (this.offset + event.loaded) / this.length * 100);\n    };\n    this.xhr.onerror = (err) => {\n      this.emit(\"error\", err);\n      this.pause();\n    }\n    this.xhr.onabort = () => { this.inflight = false; }\n\n    this.xhr.open(\"GET\", this.file, true);\n    this.xhr.responseType = \"arraybuffer\";\n\n    let endPos = Math.min(this.offset + this.chunkSize, this.length - 1);\n    this.xhr.setRequestHeader(\"If-None-Match\", \"webkit-no-cache\")\n    this.xhr.setRequestHeader(\"Range\", \"bytes=\" + this.offset + \"-\" + endPos)\n    this.xhr.overrideMimeType('text/plain; charset=x-user-defined')\n    this.xhr.send(null);\n  }\n\n  pause() {\n    this.inflight = false;\n    if (this.xhr) this.xhr.abort();\n  }\n\n  private reset() {\n    this.pause();\n    this.offset = 0;\n  }\n}\n","import { EventHost } from \"./core\"\nimport { Asset } from \"./asset\";\n\nexport class Queue extends EventHost {\n    private readMark: number = 64;\n    private finished: boolean = false;\n    private buffering: boolean = true;\n    public ended: boolean = false;\n    private buffers: any[] = [];\n\n    private asset: Asset;\n\n    constructor(asset: Asset) {\n        super();\n        this.asset = asset;\n\n        this.asset.on(\"data\", this.write.bind(this));\n        this.asset.on(\"end\", () => {\n            this.ended = true;\n        });\n        this.asset.decodePacket();\n    }\n\n    write(buffer) {\n        if(buffer) this.buffers.push(buffer);\n\n        if(this.buffering) {\n            if(this.buffers.length >= this.readMark || this.ended) {\n                this.buffering = false;\n                this.emit(\"ready\");\n            } else {\n                this.asset.decodePacket();\n            }\n        }\n    }\n\n    read() {\n        if(this.buffers.length == 0) return null;\n        this.asset.decodePacket();\n        return this.buffers.shift();\n    }\n\n    reset() {\n        this.buffers.length = 0;\n        this.buffering = true;\n        this.asset.decodePacket();\n    }\n};","/*\nThe Asset class is responsible for managing all aspects of the \ndecoding pipeline from source to decoder.  You can use the Asset\nclass to inspect information about an audio file, such as its \nformat, metadata, and duration, as well as actually decode the\nfile to linear PCM raw audio data.\n*/\nimport {EventHost} from './core';\nimport { HTTPSource, FileSource, BufferSource } from './sources';\nimport {Demuxer} from './demuxer';\nimport {Decoder} from './decoder';\nimport {ISource} from './source';\n\nexport class Asset extends EventHost {\n\n    private buffered : number = 0;\n    private duration : number = null;\n    private format : any = null;\n    private metadata : any = null;\n    private active : boolean = false;\n    private shouldDecode: boolean;\n    private demuxer : Demuxer = null;\n    public decoder : Decoder = null;\n\n    constructor(private source: ISource) {\n        super();\n                \n        this.source.once('data', this.probe.bind(this));\n        this.source.on('error', (err) => {\n            this.emit('error', err);\n            this.stop();\n        });\n            \n        this.source.on('progress', (buffered: number) => {\n            this.buffered = buffered;\n            this.emit('buffer', this.buffered);\n        });\n    }\n\n    static fromURL(url, opts) {\n        return new Asset(new HTTPSource(url, opts));\n    }\n\n    static fromFile(file) {\n        return new Asset(new FileSource(file));\n    }\n        \n    static fromBuffer(buffer) {\n        return new Asset(new BufferSource(buffer));\n    }\n        \n    start(decode? : boolean) {\n        if(this.active) return;\n\n        this.shouldDecode = (decode == undefined) ? false : !(!decode);\n        \n        this.active = true;\n        this.source.start();\n        \n        if(this.decoder && this.shouldDecode)\n            this._decode();\n    }\n\n    stop() {\n        if(!this.active) return;\n        \n        this.active = false\n        this.source.pause();\n    }\n\n    get(event: 'format'|'duration'|'metadata', callback) {\n        if(['format', 'duration', 'metadata'].indexOf(event)==-1) return;\n        if(this[event]) return callback(this[event]);\n        \n        this.once(event, (value) => {\n            this.stop();\n            callback(value);\n        });\n        this.start();\n    }\n            \n    decodePacket(){\n        this.decoder.decode();\n    }\n        \n    decodeToBuffer(callback) {\n        let length = 0;\n        let chunks = [];\n        let dataHandler = (chunk) => {\n            length += chunk.length;\n            chunks.push(chunk);\n        };\n        this.on('data', dataHandler);          \n        this.once('end', () => {\n            let buf = new Float32Array(length)\n            let offset = 0\n\n            chunks.forEach(chunk => {\n                buf.set(chunk, offset);\n                offset += chunk.length;\n            });\n                \n            this.off('data', dataHandler);\n            callback(buf);\n        });\n        this.start();\n    }\n    \n    probe(chunk) {\n        if(!this.active) return;\n        \n        let demuxer = Demuxer.find(chunk);\n        if(!demuxer)\n            return this.emit('error', 'A demuxer for this container was not found.');\n            \n        this.demuxer = new demuxer(this.source, chunk);\n        this.demuxer.on('format', this.findDecoder.bind(this));\n        \n        this.demuxer.on('duration', (duration) => {\n            this.duration = duration;\n            this.emit('duration', this.duration);\n        });\n\n        this.demuxer.on('metadata', (metadata) => {\n            this.metadata = metadata;\n            this.emit('metadata', this.metadata);\n        });\n\n        this.demuxer.on('error', (err) => {\n            this.emit('error', err);\n            this.stop();\n        });\n    }\n\n    findDecoder(format) {\n        this.format = format;\n        if(!this.active) return;\n        \n        this.emit('format', this.format);\n        \n        let decoderType = Decoder.find(this.format.formatID);\n        if(!decoderType)\n            return this.emit('error', \"A decoder for #{@format.formatID} was not found.\");\n\n        this.decoder = new decoderType(this.demuxer, this.format);\n        \n        if(this.format.floatingPoint) {\n            this.decoder.on('data', (buffer) => {\n                this.emit('data', buffer);\n            });\n        } else {\n            let div = Math.pow(2, this.format.bitsPerChannel - 1);\n            this.decoder.on('data', (buffer) => {\n                let buf = new Float32Array(buffer.length);\n                for(let i=0; i<buffer.length; i++)\n                    buf[i] = buffer[i] / div;\n                    \n                this.emit('data', buf);\n            });\n        }\n        this.decoder.on('error', (err) =>{\n            this.emit('error', err);\n            this.stop();\n        });\n            \n        this.decoder.on('end', () => {\n            this.emit('end');\n        });\n            \n        this.emit('decodeStart');\n        if(this.shouldDecode) this._decode();\n    }\n\n    private _decode() {\n        while(this.active && this.decoder.decode());\n        if(this.active) this.decoder.once(\"data\", this._decode.bind(this));\n    }\n        \n    destroy() {\n        this.stop()\n        if(this.demuxer) this.demuxer.off();\n        if(this.decoder) this.decoder.off();\n        if(this.source) this.source.off();\n        this.off()\n    }\n}","/*\nThe Player class plays back audio data from various sources\nas decoded by the Asset class.  In addition, it handles\ncommon audio filters like panning and volume adjustment,\nand interfacing with AudioDevices to keep track of the \nplayback time.\n*/\n\nimport { EventHost } from './core';\nimport { Asset } from './asset';\nimport { VolumeFilter, BalanceFilter } from './filters';\nimport { Queue } from './queue';\nimport { AudioDevice } from './audio-device';\nimport { Filter } from './filter';\n\nexport class Player extends EventHost {\n  public playing: boolean = false;\n  private buffered: number = 0;\n  private currentTime: number = 0;\n  private duration: number = 0;\n  public volume: number = 100;\n  public pan: number = 0; // -50 for left, 50 for right, 0 for center\n  private metadata: any = {};\n  private format: any;\n  private queue: Queue;\n  private startedPreloading: boolean = false;\n  private device: AudioDevice = null;\n  private refill: any;\n\n  private filters: Filter[] = [\n    new VolumeFilter(this, 'volume'),\n    new BalanceFilter(this, 'pan')\n  ];\n\n  constructor(private asset: Asset) {\n    super();\n\n    this.asset.on('buffer', (buffered) => {\n      this.buffered = buffered;\n      this.emit('buffer', this.buffered);\n    });\n\n    this.asset.on('decodeStart', () => {\n      this.queue = new Queue(this.asset);\n      this.queue.once('ready', this.startPlaying.bind(this));\n    });\n    this.asset.on('format', (format) => {\n      this.format = format;\n      this.emit('format', this.format);\n    });\n    this.asset.on('metadata', (metadata) => {\n      this.metadata = metadata;\n      this.emit('metadata', this.metadata);\n    });\n\n    this.asset.on('duration', (duration) => {\n      this.duration = duration;\n      this.emit('duration', this.duration);\n    });\n\n    this.asset.on('error', (error) => {\n      this.emit('error', error);\n    });\n  }\n\n  static fromURL(url, opts) {\n    return new Player(Asset.fromURL(url, opts));\n  }\n\n  static fromFile(file) {\n    return new Player(Asset.fromFile(file));\n  }\n\n  static fromBuffer(buffer) {\n    return new Player(Asset.fromBuffer(buffer));\n  }\n\n  preload() {\n    if (!this.asset) return;\n\n    this.startedPreloading = true;\n    this.asset.start(false);\n  }\n\n  play() {\n    if (this.playing) return;\n\n    if (!this.startedPreloading)\n      this.preload();\n\n    this.playing = true;\n    if (this.device) this.device.start();\n  }\n\n  pause() {\n    if (!this.playing) return;\n\n    this.playing = false;\n    if (this.device) this.device.stop();\n  }\n\n  togglePlayback() {\n    if (this.playing) this.pause();\n    else this.play();\n  }\n\n  stop() {\n    this.pause();\n    this.asset.stop();\n    if (this.device) this.device.destroy();\n  }\n\n  seek(timestamp) {\n    if (this.device) this.device.stop();\n    this.queue.once('ready', () => {\n      if (!this.device) return;\n      this.device.seek(this.currentTime);\n      if (this.playing) this.device.start();\n    });\n\n    // convert timestamp to sample number\n    timestamp = (timestamp / 1000) * this.format.sampleRate;\n\n    // the actual timestamp we seeked to may differ \n    // from the requested timestamp due to optimizations\n    timestamp = this.asset.decoder.seek(timestamp);\n\n    // convert back from samples to milliseconds\n    this.currentTime = timestamp / this.format.sampleRate * 1000 | 0;\n\n    this.queue.reset();\n    return this.currentTime;\n  }\n\n  startPlaying() {\n    let frame = this.queue.read();\n    let frameOffset = 0;\n\n    this.device = new AudioDevice(this.format.sampleRate, this.format.channelsPerFrame);\n    this.device.on('timeUpdate', (currentTime) => {\n      this.currentTime = currentTime;\n      this.emit('progress', this.currentTime);\n    });\n\n    this.refill = (buffer) => {\n      if (!this.playing) return;\n\n      // try reading another frame if one isn't already available\n      // happens when we play to the end and then seek back\n      if (!frame) {\n        frame = this.queue.read();\n        frameOffset = 0\n      }\n\n      let bufferOffset = 0\n      while (frame && bufferOffset < buffer.length) {\n        let max = Math.min(frame.length - frameOffset, buffer.length - bufferOffset);\n        for (let i = 0; i < max; i++)\n          buffer[bufferOffset++] = frame[frameOffset++];\n\n        if (frameOffset == frame.length) {\n          frame = this.queue.read();\n          frameOffset = 0;\n        }\n      }\n\n      // run any applied filters\n      this.filters.forEach((filter) => {\n        filter.process(buffer);\n      });\n\n      // if we've run out of data, pause the player\n      if (!frame) {\n        // if this was the end of the track, make\n        // sure the currentTime reflects that\n        if (this.queue.ended) {\n          this.currentTime = this.duration;\n          this.emit('progress', this.currentTime);\n          this.emit('end');\n          this.stop()\n        } else {\n          // if we ran out of data in the middle of \n          // the track, stop the timer but don't change\n          // the playback state\n          this.device.stop()\n        }\n      }\n    };\n\n    this.device.on('refill', this.refill);\n    if (this.playing) this.device.start();\n    this.emit('ready');\n  }\n  destroy() {\n    this.stop();\n    if (this.device) this.device.off();\n    if (this.asset) this.asset.destroy();\n    this.off();\n  }\n}"],"names":["__extends","AV.BufferList","AV.Stream","AV.EventHost","AV.Buffer"],"mappings":"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"}